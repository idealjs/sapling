---
source: crates/sapling_transformer/tests/test_utils.rs
expression: jsx_attr.tsx
---
# Input
```tsx
function Attr() {
  return <button type="button">attr</button>;
}

let someStyle = { color: "red", fontSize: "16px" };

function Attr2() {
  return <div style={someStyle}>attr</div>;
}

let getSomeStyle = () => someStyle;

function Attr3() {
  return <div style={getSomeStyle()}>attr</div>;
}

function Attr4() {
  return <div style={getSomeStyle()} />;
}

```

# Transformations
```tsx
function Attr() {
  return _$createJsxTagElement(() => {
    let _el$ = _$createElement("button");
    _$setProp(_el$, "type", "button");
    _$insertNode(_el$, _$createTextNode("attr"));
    return _el$;
  });
}

let someStyle = { color: "red", fontSize: "16px" };

function Attr2() {
  return _$createJsxTagElement(() => {
    let _el$ = _$createElement("div");
    _$setProp(_el$, "style", someStyle);
    _$insertNode(_el$, _$createTextNode("attr"));
    return _el$;
  });
}

let getSomeStyle = () => someStyle;

function Attr3() {
  return _$createJsxTagElement(() => {
    let _el$ = _$createElement("div");
    _$setProp(_el$, "style", getSomeStyle());
    _$insertNode(_el$, _$createTextNode("attr"));
    return _el$;
  });
}

function Attr4() {
  return _$createJsxTagElement(() => {
    let _el$ = _$createElement("div");
    _$effect(
      () => {
        _$setProp(_el$, "style", getSomeStyle());
      },
      () => {
        return [getSomeStyle()];
      },
    );
    return _el$;
  });
}

```
