---
source: crates/sapling_transformer/tests/expr_chain.rs
expression: counter.tsx.chain
---
# Input
```tsx
import { State } from "@idealjs/sapling";

class App {
  @State
  accessor obj: {
    counterA: { a: number; b: number };
    counterB: { a: number; b: number };
  } = {
    counterA: { a: 0, b: 0 },
    counterB: { a: 0, b: 0 },
  };
  public render() {
    let { obj } = this;
    let { counterA, counterB } = obj;
    let { a: aa } = counterA;
    let { b: ab } = counterA;
    let { a: ba } = counterB;
    let { b: bb } = counterB;
    let key: "a" | "b" = "a";
    let xxx: "obj" | "" = "obj";
    let counterKey: "counterA" | "counterB" = "counterA";
    let {
      counterA: { a: nestedAA },
    } = this.obj;
    return (
      <div>
        <button
          onClick={() => {
            aa++;
          }}
        >
          +
        </button>
        {aa}
        {ab}
        {ba}
        {bb}
        {nestedAA}
        {counterA.a}
        {counterA.b}
        {counterB.a}
        {counterB.b}
        {obj.counterA.a}
        {obj.counterA.b}
        {obj.counterB.a}
        {obj.counterB.b}
        {this.obj.counterA.a}
        {this.obj.counterA.b}
        {this.obj.counterB.a}
        {this.obj.counterB.b}
        {this.obj.counterA[key]}
        {this.obj.counterB[key]}
        {this.obj[counterKey].a}
        {this.obj[counterKey].b}
        {this.obj[counterKey].a}
        {this.obj[counterKey].b}
        {this.obj[counterKey][key]}
        {this.obj[counterKey][key]}
        {this[xxx].counterA[key]}
        <button
          onClick={() => {
            aa--;
          }}
        >
          -
        </button>
      </div>
    );
  }
}

export default App;

```

# Transformations
```tsx
obj,counterA,a
obj,counterA,b
obj,counterB,a
obj,counterB,b
obj,counterA,a
obj,counterA,a
obj,counterA,b
obj,counterB,a
obj,counterB,b
obj,counterA,a
obj,counterA,b
obj,counterB,a
obj,counterB,b
obj,counterA,a
obj,counterA,b
obj,counterB,a
obj,counterB,b
obj,counterA,None
obj,counterB,None
obj,None,a
obj,None,b
obj,None,a
obj,None,b
obj,None,None
obj,None,None
None,counterA,None
```
