use lazy_static::lazy_static;
use std::collections::HashSet;

lazy_static! {
    pub static ref INLINE_ELEMENTS: HashSet<&'static str> = {
        let mut set = HashSet::new();
        set.insert("a");
        set.insert("abbr");
        set.insert("acronym");
        set.insert("b");
        set.insert("bdi");
        set.insert("bdo");
        set.insert("big");
        set.insert("br");
        set.insert("button");
        set.insert("canvas");
        set.insert("cite");
        set.insert("code");
        set.insert("data");
        set.insert("datalist");
        set.insert("del");
        set.insert("dfn");
        set.insert("em");
        set.insert("embed");
        set.insert("i");
        set.insert("iframe");
        set.insert("img");
        set.insert("input");
        set.insert("ins");
        set.insert("kbd");
        set.insert("label");
        set.insert("map");
        set.insert("mark");
        set.insert("meter");
        set.insert("noscript");
        set.insert("object");
        set.insert("output");
        set.insert("picture");
        set.insert("progress");
        set.insert("q");
        set.insert("ruby");
        set.insert("s");
        set.insert("samp");
        set.insert("script");
        set.insert("select");
        set.insert("slot");
        set.insert("small");
        set.insert("span");
        set.insert("strong");
        set.insert("sub");
        set.insert("sup");
        set.insert("svg");
        set.insert("template");
        set.insert("textarea");
        set.insert("time");
        set.insert("u");
        set.insert("tt");
        set.insert("var");
        set.insert("video");
        set
    };

    pub static ref BLOCK_ELEMENTS: HashSet<&'static str> = {
        let mut set = HashSet::new();
        set.insert("address");
        set.insert("article");
        set.insert("aside");
        set.insert("blockquote");
        set.insert("dd");
        set.insert("details");
        set.insert("dialog");
        set.insert("div");
        set.insert("dl");
        set.insert("dt");
        set.insert("fieldset");
        set.insert("figcaption");
        set.insert("figure");
        set.insert("footer");
        set.insert("form");
        set.insert("h1");
        set.insert("h2");
        set.insert("h3");
        set.insert("h4");
        set.insert("h5");
        set.insert("h6");
        set.insert("header");
        set.insert("hgroup");
        set.insert("hr");
        set.insert("li");
        set.insert("main");
        set.insert("menu");
        set.insert("nav");
        set.insert("ol");
        set.insert("p");
        set.insert("pre");
        set.insert("section");
        set.insert("table");
        set.insert("ul");
        set
    };
    
    pub static ref VOID_ELEMENTS: HashSet<&'static str> = {
        let mut set = HashSet::new();
        set.insert("area");
        set.insert("base");
        set.insert("br");
        set.insert("col");
        set.insert("embed");
        set.insert("hr");
        set.insert("img");
        set.insert("input");
        set.insert("keygen");
        set.insert("link");
        set.insert("menuitem");
        set.insert("meta");
        set.insert("param");
        set.insert("source");
        set.insert("track");
        set.insert("wbr");
        set
    };
}
