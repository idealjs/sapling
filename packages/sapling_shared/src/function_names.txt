# 函数命名对照表 (camelCase -> snake_case)

## DOM Functions
transformAttributes -> transform_attributes
setAttr -> set_attr
transformChildren -> transform_children
processSpreads -> process_spreads
transformElement -> transform_element
detectExpressions -> detect_expressions
createPlaceholder -> create_placeholder
findLastElement -> find_last_element
detectResolvableEventHandler -> detect_resolvable_event_handler
contextToCustomElement -> context_to_custom_element
nextChild -> next_child
wrapDynamics -> wrap_dynamics
appendTemplates -> append_templates
registerTemplate -> register_template
createTemplate -> create_template

## Component Functions
transformComponent -> transform_component
transformComponentChildren -> transform_component_children
convertComponentIdentifier -> convert_component_identifier
transformFragmentChildren -> transform_fragment_children

## Transform Functions
transformNode -> transform_node
transformThis -> transform_this
transformJSX -> transform_jsx
getCreateTemplate -> get_create_template
getTargetFunctionParent -> get_target_function_parent

## Utility Functions
isDynamic -> is_dynamic
escapeHTML -> escape_html
transformCondition -> transform_condition
wrappedByText -> wrapped_by_text
convertJSXIdentifier -> convert_jsx_identifier
jsxElementNameToString -> jsx_element_name_to_string
filterChildren -> filter_children
checkLength -> check_length
trimWhitespace -> trim_whitespace
tagNameToIdentifier -> tag_name_to_identifier
getStaticExpression -> get_static_expression
canNativeSpread -> can_native_spread
getNumberedId -> get_numbered_id
escapeStringForTemplate -> escape_string_for_template
getConfig -> get_config
getRendererConfig -> get_renderer_config
getTagName -> get_tag_name
isComponent -> is_component
toEventName -> to_event_name
toAttributeName -> to_attribute_name
toPropertyName -> to_property_name

## Validation Functions
isInvalidMarkup -> is_invalid_markup

## SSR Functions
transformToObject -> transform_to_object
transformClasslistObject -> transform_classlist_object
escapeExpression -> escape_expression
normalizeAttributes -> normalize_attributes

## Universal Functions
transformAttributes -> transform_attributes_universal
processSpreads -> process_spreads_universal
transformChildren -> transform_children_universal
transformElement -> transform_element_universal
nextChild -> next_child_universal
wrapDynamics -> wrap_dynamics_universal
createTemplate -> create_template_universal

# 查找命令
```bash
# 在Rust代码中查找这些函数
find . -type f -name "*.rs" -exec grep -l "fn \(transform_attributes\|set_attr\|transform_children\|process_spreads\|transform_element\|detect_expressions\|create_placeholder\|find_last_element\|detect_resolvable_event_handler\|context_to_custom_element\|next_child\)" {} \;
