---
source: packages/sapling_transformer/tests/test_utils.rs
assertion_line: 87
expression: index.tsx
---
# Input
```tsx
let some = () => {
  return 1;
};

function Expr() {
  const value = some();

  return <div>{value}</div>;
}

const Expr2 = () => {
  return <div>{some()}</div>;
};

const Expr3 = () => {
  const some = () => {
    return 2;
  };
  return <div>{some()}</div>;
};

const Expr4 = () => {
  const some = () => {
    return 3;
  };
  return (
    <div>
      <div>{some()}</div>
    </div>
  );
};

const Expr5 = () => {
  return (
    <div>
      <div>abcd{some()}efg</div>
    </div>
  );
};

```

# Transformations
```tsx
let some = () => {
  return 1;
};

function Expr() {
  const value = some();
  return (() => {
    let _el$ = _$createElement("div");
    _$insert(_el$, () => {
      return value;
    });
    return _el$;
  })();
}

const Expr2 = () => {
  return (() => {
    let _el$ = _$createElement("div");
    _$insert(_el$, () => {
      return some();
    });
    return _el$;
  })();
};

const Expr3 = () => {
  const some = () => {
    return 2;
  };
  return (() => {
    let _el$ = _$createElement("div");
    _$insert(_el$, () => {
      return some();
    });
    return _el$;
  })();
};

const Expr4 = () => {
  const some = () => {
    return 3;
  };
  return (() => {
    let _el$ = _$createElement("div");
    let _el$1 = _$createElement("div");
    _$insert(_el$1, () => {
      return some();
    });
    _$insertNode(_el$, _el$1);
    return _el$;
  })();
};

const Expr5 = () => {
  return (() => {
    let _el$ = _$createElement("div");
    let _el$1 = _$createElement("div");
    _$insertNode(_el$1, _$createTextNode("abcd"));
    _$insert(_el$1, () => {
      return some();
    });
    _$insertNode(_el$1, _$createTextNode("efg"));
    _$insertNode(_el$, _el$1);
    return _el$;
  })();
};

```
